package  ${package};

import org.apache.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.cloud.icenter.common.utils.JsonResult;
import ${implements_package}.${model}Service;

import ${model_path};

/**
 * 代码自动生成类
 * @author lkp 
 * mail 1253364701@qq.com
 * create:${nowDate}
 * update:
 */
@RequestMapping(value="/${request}/${model_lowercase}")
@Controller
public class ${model}Controller extends ModelAction<${model}> {

	
	Logger logger  =  Logger.getLogger(this.getClass());

	@Autowired private ${model}Service ${model_lowercase}Service;
	
	/**
	 * 列表页
	 * @return
	 */
	@RequestMapping(method = RequestMethod.GET)
	public String ${model_lowercase}List(){
		
		return "${request}/${model_lowercase}/${model_lowercase}-list";
	}

	/**
	 * 查询页
	 * @return
	 */
	@RequestMapping(value="/query",method=RequestMethod.GET)
	public String query(){
		
		return "${request}/${model_lowercase}/${model_lowercase}-query";
	}
	
	/**
	 * 
	 * @return
	 */
	@RequestMapping(value="/query",method=RequestMethod.POST)
	public void query(${model} param){
		${model_lowercase}Service.find(getPagination(param));
		printJson(getPagination());
	}
	
	@RequestMapping(value="/add",method=RequestMethod.GET)
	public String add() {
		return "${request}/${model_lowercase}/${model_lowercase}-add";
	}
	
	@RequestMapping(value="/add",method=RequestMethod.POST)
	@ResponseBody
	public JsonResult doAdd(@RequestBody ${model} param) {
		${model_lowercase}Service.add(param);
		return jsonResult(200, "OK");
	}
	
	@RequestMapping(value="/update",method=RequestMethod.GET)
	public String update(String id) {
		${model} param = ${model_lowercase}Service.get(id);
		setAttribute("params", param);
		return "${request}/${model_lowercase}/${model_lowercase}-update";
	}
	
	@RequestMapping(value="/update",method=RequestMethod.POST)
	@ResponseBody
	public JsonResult doUpdate(@RequestBody ${model} param) {
		
		${model} pojo = ${model_lowercase}Service.get(param.getId());
#foreach($column in $columns)
		$column.update;
#end
		${model_lowercase}Service.update(pojo);
		return jsonResult(200, "OK");
	}
	
	@RequestMapping(value="/delete",method=RequestMethod.POST)
	@ResponseBody
	public JsonResult doDelete(String id) {
		${model_lowercase}Service.delete(id);
		return jsonResult(200, "OK");
	}
	
	@RequestMapping(value="/deletes",method=RequestMethod.POST)
	@ResponseBody
	public JsonResult doDelete(String[] ids) {
		for(String id:ids){
			${model_lowercase}Service.delete(id);
		}
		return jsonResult(200, "OK");
	}
	
}
